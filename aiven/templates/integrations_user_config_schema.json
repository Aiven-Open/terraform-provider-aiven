{
  "dashboard": {
    "additionalProperties": true,
    "title": "Integration user config",
    "type": "object"
  },
  "datadog": {
    "additionalProperties": false,
    "properties": {
      "kafka_custom_metrics": {
        "items": {
          "example": "kafka.log.log_size",
          "title": "Metric name",
          "type": "string"
        },
        "title": "List of custom metrics",
        "type": "array"
      }
    },
    "type": "object"
  },
  "external_elasticsearch_logs": {
    "additionalProperties": true,
    "title": "Integration user config",
    "type": "object"
  },
  "jolokia": {
    "additionalProperties": true,
    "title": "Integration user config",
    "type": "object"
  },
  "kafka_connect": {
    "additionalProperties": true,
    "properties": {
      "kafka_connect": {
        "additionalProperties": false,
        "properties": {
          "config_storage_topic": {
            "example": "__connect_configs",
            "title": "The name of the topic where connector and task configuration data are stored.This must be the same for all workers with the same group_id.",
            "type": "string"
          },
          "group_id": {
            "example": "connect",
            "title": "A unique string that identifies the Connect cluster group this worker belongs to.",
            "type": "string"
          },
          "offset_storage_topic": {
            "example": "__connect_offsets",
            "title": "The name of the topic where connector and task configuration offsets are stored.This must be the same for all workers with the same group_id.",
            "type": "string"
          },
          "status_storage_topic": {
            "example": "__connect_status",
            "title": "The name of the topic where connector and task configuration status updates are stored.This must be the same for all workers with the same group_id.",
            "type": "string"
          }
        },
        "title": "Kafka Connect service configuration values",
        "type": "object"
      }
    },
    "title": "Integration user config",
    "type": "object"
  },
  "logs": {
    "additionalProperties": false,
    "properties": {
      "elasticsearch_index_days_max": {
        "default": 3,
        "example": 5,
        "maximum": 10000,
        "minimum": 1,
        "title": "Elasticsearch index retention limit",
        "type": "integer"
      },
      "elasticsearch_index_prefix": {
        "default": "logs",
        "example": "logs",
        "maxLength": 1000,
        "minLength": 1,
        "title": "Elasticsearch index prefix",
        "type": "string"
      }
    },
    "type": "object"
  },
  "metrics": {
    "additionalProperties": true,
    "properties": {
      "database": {
        "example": "metrics",
        "pattern": "^[_A-Za-z0-9][-_A-Za-z0-9]{0,39}$",
        "title": "Name of the database where to store metric datapoints. Only affects PostgreSQL destinations. Defaults to 'metrics'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.",
        "type": "string",
        "user_error": "Must consist of alpha-numeric characters, underscores or dashes, may not start with dash, max 40 characters"
      },
      "retention_days": {
        "example": 30,
        "maximum": 10000,
        "minimum": 0,
        "title": "Number of days to keep old metrics. Only affects PostgreSQL destinations. Set to 0 for no automatic cleanup. Defaults to 30 days.",
        "type": "integer"
      },
      "ro_username": {
        "example": "metrics_reader",
        "pattern": "^[_A-Za-z0-9][-._A-Za-z0-9]{0,39}$",
        "title": "Name of a user that can be used to read metrics. This will be used for Grafana integration (if enabled) to prevent Grafana users from making undesired changes. Only affects PostgreSQL destinations. Defaults to 'metrics_reader'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.",
        "type": "string",
        "user_error": "Must consist of alpha-numeric characters, dots, underscores or dashes, may not start with dash or dot, max 40 characters"
      },
      "username": {
        "example": "metrics_writer",
        "pattern": "^[_A-Za-z0-9][-._A-Za-z0-9]{0,39}$",
        "title": "Name of the user used to write metrics. Only affects PostgreSQL destinations. Defaults to 'metrics_writer'. Note that this must be the same for all metrics integrations that write data to the same PostgreSQL service.",
        "type": "string",
        "user_error": "Must consist of alpha-numeric characters, dots, underscores or dashes, may not start with dash or dot, max 40 characters"
      }
    },
    "title": "Integration user config",
    "type": "object"
  },
  "mirrormaker": {
    "additionalProperties": false,
    "properties": {
      "mirrormaker_whitelist": {
        "default": ".*",
        "example": ".*",
        "maxLength": 1000,
        "minLength": 1,
        "title": "Mirrormaker topic whitelist",
        "type": "string"
      }
    },
    "type": "object"
  },
  "prometheus": {
    "additionalProperties": true,
    "title": "Integration user config",
    "type": "object"
  },
  "read_replica": {
    "additionalProperties": true,
    "title": "Integration user config",
    "type": "object"
  },
  "rsyslog": {
    "additionalProperties": true,
    "title": "Integration user config",
    "type": "object"
  },
  "signalfx": {
    "additionalProperties": true,
    "title": "Integration user config",
    "type": "object"
  }
}
