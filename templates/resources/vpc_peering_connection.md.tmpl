---
page_title: "{{.Name}} {{.Type}} - {{.ProviderName}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---
# {{.Name}} ({{.Type}})
{{ .Description | trimspace }}

## Information regarding states

Happy path of the `state` includes the following transitions of a VPC peering connection: 
`APPROVED` -> `PENDING_PEER` -> `ACTIVE`.

- `APPROVED` is the initial state after the user does a successful creation of a 
peering connection resource via Terraform. 

- `PENDING_PEER` the connection enters the `PENDING_PEER` state from `APPROVED` once the 
Aiven platform has created a connection to the specified peer successfully in the cloud, 
but the connection is not active until the user completes the setup in their cloud account. 
The steps needed in the user cloud account depend on the used cloud provider.

- `ACTIVE` stands for a VPC peering connection whose setup has been completed

- `DELETED` means a user deleted the peering connection through the Aiven Terraform provider, 
or Aiven Web Console or directly via Aiven API.

- `DELETED_BY_PEER` appears when a user deleted the VPC peering connection through their cloud 
account. That is, the user deleted the peering cloud resource in their account. There are no 
transitions from this state

- `REJECTED_BY_PEER` an AWS specific state, when VPC peering connection was in the `PENDING_PEER` state, 
and the user rejected the AWS peering connection request.

- `INVALID_SPECIFICATION` is a VPC peering connection that was in the `APPROVED` state but could not be  
successfully created because of something in the user's control, for example, the peer cloud account of VPC 
doesn't exist, overlapping IP ranges, or the Aiven cloud account doesn't have permissions to peer 
there. `state_info` field contains more details about the particular issue.

{{ if .HasExample -}}
## Example Usage
{{ tffile .ExampleFile }}
{{- end }}
{{ .SchemaMarkdown | trimspace }}
{{ if .HasImport -}}
## Import
Import is supported using the following syntax:
{{ printf "{{codefile \"shell\" %q}}" .ImportFile }}
{{- end }}
