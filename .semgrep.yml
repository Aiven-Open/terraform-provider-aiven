rules:

# Rules to make sure that our copyright headers are up-to-date:
#
- id: outdated-copyright-header
  languages: [generic]
  patterns:
  - pattern: |
      Copyright (c) $Y Aiven, Helsinki, Finland. https://aiven.io/
  - metavariable-regex:
      metavariable: $Y
      regex: ^(?!2018-2021)
  fix: |
      Copyright (c) 2018-2021 Aiven, Helsinki, Finland. https://aiven.io/
  message: |
    Aiven copyright message is outdated
  severity: WARNING

# Rules to make sure that our schema has descriptions for all fields:

- id: schema-resource-without-description
  languages: [go]
  paths:
    include:
    - "resource_*"
    - "datasource_*"
  patterns:
  - pattern: |
      &schema.Resource{ ... } 
  - pattern-not: |
      &schema.Resource{ ..., Description: ..., ... }
  - pattern-inside: |
      func $F() *schema.Resource { ... }
  message: |
    Each schema resource should have a description
  severity: WARNING

- id: schema-element-without-description
  languages: [go]
  paths:
    include:
    - "resource_*"
    - "datasource_*"
  patterns:
  - pattern-inside: |
      map[string]*schema.Schema{ ... }
  - pattern: |
      { ... }
  - pattern-not: |
      { ..., Description: ..., ... }
  message: |
    Each schema field should have a description
  severity: WARNING

# Rules to select small service plans in tests:

# TODO: we can maybe use startup-2 for most kafka needs
- id: large-plan-in-test-kafka
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside:
      resource "aiven_kafka" ... {
        ...
      }
  - pattern-not-regex: business-4
  fix: |
    plan = "business-4"
  message: |
    Tests should use the smallest kafka plan to save costs
  severity: WARNING

- id: large-plan-in-test-m3aggregator
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside:
      resource "aiven_m3aggregator" ... {
        ...
      }
  - pattern-not-regex: business-8
  fix: |
    plan = "business-8"
  message: |
    Tests should use the smallest m3aggregator plan to save costs
  severity: WARNING

- id: large-plan-in-test-clickhouse
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside:
      resource "aiven_clickhouse" ... {
        ...
      }
  - pattern-not-regex: startup-beta-8
  fix: |
    plan = "startup-beta-8"
  message: |
    Tests should use the smallest clickhouse plan to save costs
  severity: WARNING

- id: large-plan-in-test-other
  languages: [generic]
  paths:
    include:
    - "*_test.go"
  patterns:
  - pattern-inside:
      plan = "..."
  - pattern-inside:
      resource ... ... {
        ...
      }
  - pattern-not-inside:
      resource "aiven_kafka" ... {
        ...
      }
  - pattern-not-inside:
      resource "aiven_m3aggregator" ... {
        ...
      }
  - pattern-not-inside:
      resource "aiven_clickhouse" ... {
        ...
      }
  - pattern-not-regex: (startup-(1|2|4|8)|%s)
  fix: |
    plan = "startup-4"
  message: |
    Tests should use the smallest service plan to save costs
  severity: WARNING
