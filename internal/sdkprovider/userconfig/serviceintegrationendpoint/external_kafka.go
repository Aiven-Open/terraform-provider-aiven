// Code generated by user config generator. DO NOT EDIT.

package serviceintegrationendpoint

import (
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/validation"

	"github.com/aiven/terraform-provider-aiven/internal/sdkprovider/userconfig/diff"
)

func externalKafkaUserConfig() *schema.Schema {
	return &schema.Schema{
		Description:      "ExternalKafka user configurable settings",
		DiffSuppressFunc: diff.SuppressUnchanged,
		Elem: &schema.Resource{Schema: map[string]*schema.Schema{
			"bootstrap_servers": {
				Description: "Bootstrap servers.",
				Required:    true,
				Type:        schema.TypeString,
			},
			"sasl_mechanism": {
				Description:  "Enum: `PLAIN`, `SCRAM-SHA-256`, `SCRAM-SHA-512`. SASL mechanism used for connections to the Kafka server.",
				Optional:     true,
				Type:         schema.TypeString,
				ValidateFunc: validation.StringInSlice([]string{"PLAIN", "SCRAM-SHA-256", "SCRAM-SHA-512"}, false),
			},
			"sasl_plain_password": {
				Description: "Password for SASL PLAIN mechanism in the Kafka server.",
				Optional:    true,
				Sensitive:   true,
				Type:        schema.TypeString,
			},
			"sasl_plain_username": {
				Description: "Username for SASL PLAIN mechanism in the Kafka server.",
				Optional:    true,
				Type:        schema.TypeString,
			},
			"security_protocol": {
				Description:  "Enum: `PLAINTEXT`, `SSL`, `SASL_PLAINTEXT`, `SASL_SSL`. Security protocol.",
				Required:     true,
				Type:         schema.TypeString,
				ValidateFunc: validation.StringInSlice([]string{"PLAINTEXT", "SSL", "SASL_PLAINTEXT", "SASL_SSL"}, false),
			},
			"ssl_ca_cert": {
				Description: "PEM-encoded CA certificate.",
				Optional:    true,
				Type:        schema.TypeString,
			},
			"ssl_client_cert": {
				Description: "PEM-encoded client certificate.",
				Optional:    true,
				Type:        schema.TypeString,
			},
			"ssl_client_key": {
				Description: "PEM-encoded client key.",
				Optional:    true,
				Type:        schema.TypeString,
			},
			"ssl_endpoint_identification_algorithm": {
				Description:  "Enum: `https`. The endpoint identification algorithm to validate server hostname using server certificate.",
				Optional:     true,
				Type:         schema.TypeString,
				ValidateFunc: validation.StringInSlice([]string{"https"}, false),
			},
		}},
		MaxItems: 1,
		Optional: true,
		Type:     schema.TypeList,
	}
}
